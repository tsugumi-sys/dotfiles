###
# Python
###
[language-server]
ruff-lsp = { command = "ruff-lsp" }
pylsp = { command = "pylsp" }

[[language]]
name = "python"
scope = "source.python"
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
injection-regex = "python"
file-types = ["py"]
auto-format = true
language-servers = ["ruff-lsp", "pylsp"]
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "python"
source = { git = "https://github.com/tree-sitter/tree-sitter-python", rev = "d6210ceab11e8d812d4ab59c07c81458ec6e5184" }

###
# Biome
###
[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

###
# Json
###
[[language]]
name = "json"
language-servers = [ { name = "vscode-json-language-server" }, "biome" ]

###
# Javascript
###
[language-server.deno-lsp-javascript]
command = "deno"
args = ["lsp"]
language-id = "javascript"
config = { enable = true, lint = true, unstable = true }

[[language]]
name = "javascript"
scope = "source.js"
injection-regex = "^(js|javascript)$"
file-types = ["js", "mjs"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
indent = { tab-width = 2, unit = "  " }
auto-format = true
language-servers = ["deno-lsp-javascript", "biome"]
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "js"] }

[language-server.deno-lsp-jsreact]
command = "deno"
args = ["lsp"]
language-id = "javascriptreact"
config = { enable = true, lint = true, unstable = true }


[[language]]
name = "jsx"
scope = "source.jsx"
injection-regex = "jsx"
file-types = ["jsx"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
indent = { tab-width = 2, unit = "  " }
grammar = "javascript"
language-servers = ["deno-lsp-jsreact", "biome"]
auto-format = true
formatter = { command = 'deno', args = ["fmt", "-", "--ext", "jsx"] }


[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]
config.hostInfo = "helix"

[[language]]
name = "typescript"
scope = "source.ts"
injection-regex = "^(ts|typescript)$"
file-types = ["ts"]
roots = ["deno.json", "package.json", "tsconfig.json"]
indent = { tab-width = 2, unit = "  " }
language-servers = [ { name = "typescript-language-server", except-features = [ "format" ] }, "biome" ]
auto-format = true

[language-server.deno-lsp-tsx]
command = "deno"
args = ["lsp"]
language-id = "typescriptreact"
config = { enable = true, lint = true, unstable = true }

[[language]]
name = "tsx"
scope = "source.tsx"
injection-regex = "^(tsx)$"                                           # |typescript
file-types = ["tsx"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
indent = { tab-width = 2, unit = "  " }
auto-format = true
language-servers = ["deno-lsp-tsx", "biome"]

### 
# Svelte
###
[[language]]
name = "svelte"
scope = "source.svelte"
injection-regex = "svelte"
file-types = ["svelte"]
indent = { tab-width = 2, unit = "  " }
language-servers = [ "svelteserver", "biome" ]
auto-format = true
formatter = { command = 'prettier', args = ["--plugin", "prettier-plugin-svelte", "--stdin"] }

[[grammar]]
name = "svelte"
source = { git = "https://github.com/Himujjal/tree-sitter-svelte", rev = "be7f2e7db1fc19f0852265ec60923fc058380739" }

###
# Toml
###
[language-server.taplo-lsp]
command = "taplo"
args = ["lsp", "stdio"]

[[language]]
name = "toml"
scope = "source.toml"
roots = ["*.toml"]
auto-format = true
injection-regex = "toml"
file-types = ["toml"]
language-servers = ["taplo-lsp"]
indent = { tab-width = 2, unit = "  " }

###
# Yaml
###
[language-server.yaml-lsp]
command = "yaml-language-server"
args = ["--stdio"]
language-id = "yaml"

[[language]]
name = "yaml"
scope = "source.yaml"
file-types = ["yml", "yaml"]
roots = []
indent = { tab-width = 2, unit = "  " }
injection-regex = "yml|yaml"
auto-format = true
language-servers = ["yaml-lsp"]


###
# Terraform
###
[language-server.terraform-lsp]
command = "terraform-ls"
args = ["serve"]

[[language]]
name = "hcl"
language-id = "terraform"
scope = "source.hcl"
injection-regex = "(hcl|tf|nomad)"
file-types = ["hcl", "tf", "nomad"]
roots = []
indent = { tab-width = 2, unit = "  " }
language-servers = ["terraform-lsp"]
auto-format = true

[language-server.terraform-vars-lsp]
command = "terraform-ls"
args = ["serve"]
language-id = "terraform-vars"


[[language]]
name = "tfvars"
language-id = "terraform-vars"
scope = "source.tfvars"
file-types = ["tfvars"]
roots = []
indent = { tab-width = 2, unit = "  " }
auto-format = true
grammar = "hcl"

###
# Latex
###
[language-server.tex-lsp]
command = "texlab"

[[language]]
name = "latex"
scope = "source.tex"
injection-regex = "tex"
file-types = ["tex"]
roots = []
language-servers = ["texlab"]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "latex"
source = { git = "https://github.com/latex-lsp/tree-sitter-latex", rev = "6b7ea839307670e6bda011f888717d3a882ecc09" }

[[language]]
name = "bibtex"
scope = "source.bib"
injection-regex = "bib"
file-types = ["bib"]
roots = []
language-servers = ["tex-lsp"]
indent = { tab-width = 4, unit = "\t" }
auto-format = true

[language.formatter]
command = 'bibtex-tidy'
args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
]

[[grammar]]
name = "bibtex"
source = { git = "https://github.com/latex-lsp/tree-sitter-bibtex", rev = "ccfd77db0ed799b6c22c214fe9d2937f47bc8b34" }

###
# Ruby
###
[language-server.ruby-lsp]
command = "solargraph"
args = ["stdio"]


[[language]]
name = "ruby"
scope = "source.ruby"
injection-regex = "ruby"
file-types = [
  "rb",
  "rake",
  "rakefile",
  "irb",
  "gemfile",
  "gemspec",
  "Rakefile",
  "Gemfile",
  "rabl",
  "jbuilder",
  "jb",
  "Podfile",
  "podspec",
  "Vagrantfile",
  "Brewfile",
]
shebangs = ["ruby"]
roots = []
language-servers = ["ruby-lsp"]
formatter = { command = "rubocop", args = [
  "--stdin",
  "%",
  "-a",
  "--stderr",
  "--fail-level",
  "fatal",
] }
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "ruby"
source = { git = "https://github.com/tree-sitter/tree-sitter-ruby", rev = "206c7077164372c596ffa8eaadb9435c28941364" }


###
# Rust
###
[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[[grammar]]
name = "rust"
source = { git = "https://github.com/tree-sitter/tree-sitter-rust", rev = "0431a2c60828731f27491ee9fdefe25e250ce9c9" }

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
auto-format = true
language-servers = ["rust-analyzer"]
indent = { tab-width = 4, unit = "    " }


###
# Swift
###
[language-server.swiftlint]
command = "swiftlint"

[[language]]
name = "swift"
auto-format = true
language-servers = ["sourcekit-lsp", "swiftlint"]
formatter = { command = "swiftformat", args = [ "--indent", "2"]}
[language.debugger]
command = "lldb-dap"
name = "lldp-dap"
port-arg = "--port {}"
transport = "tcp"

[[language.debugger.templates]]
name = "binary"
request = "launch"
[[language.debugger.templates.completion]]
completion = "filename"
name = "binary"

[language.debugger.templates.args]
program = "{0}"
runInTerminal = true

[[grammar]]
name = "swift"
source = { git = "https://github.com/alex-pinkus/tree-sitter-swift", rev = "57c1c6d6ffa1c44b330182d41717e6fe37430704" }
